services:
  - type: web
    name: golf-mgmt-api
    env: python
    buildCommand: |
      echo "開始安裝依賴..."
      pip install -r requirements.txt
      echo "建置完成"
      
      echo "開始資料庫初始化..."
      echo "當前目錄: $PWD"
      echo "列出目錄內容:"
      ls -la
      
      echo "設置環境變數..."
      export FLASK_APP=run.py
      export PYTHONPATH=$PWD
      
      echo "創建初始化腳本..."
      cat > init_db_temp.py << 'EOF'
      import os
      import sys
      from flask_migrate import upgrade
      from app import db
      
      def init_db():
          try:
              sys.stdout.write('執行資料庫遷移...\n')
              sys.stdout.flush()
              upgrade()
              sys.stdout.write('資料庫遷移完成\n')
              sys.stdout.flush()
              
              sys.stdout.write('檢查資料庫連接...\n')
              sys.stdout.flush()
              db.engine.connect()
              sys.stdout.write('資料庫連接成功\n')
              sys.stdout.flush()
              
              sys.stdout.write('執行初始化腳本...\n')
              sys.stdout.flush()
              import init_db
              sys.stdout.write('資料庫初始化完成\n')
              sys.stdout.flush()
          except Exception as e:
              sys.stderr.write(f'錯誤: {str(e)}\n')
              sys.stderr.flush()
              raise
      
      if __name__ == '__main__':
          init_db()
      EOF
      
      echo "執行初始化腳本..."
      PYTHONUNBUFFERED=1 python init_db_temp.py 2>&1
      
      echo "清理臨時文件..."
      rm init_db_temp.py
      
      echo "資料庫初始化流程完成"
    startCommand: gunicorn run:app
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: SECRET_KEY
        sync: false
      - key: FLASK_DEBUG
        value: 0

databases:
  - name: golf-mgmt-db
    databaseName: golf_mgmt
    user: golf_mgmt
    region: singapore  # 指定區域
    ipAllowList: []  # 允許所有 IP 訪問
    plan: free 